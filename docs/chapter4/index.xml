<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>4章 トリアージ後の対応 on 脆弱性トリアージガイドライン作成の手引き</title><link>https://webapppentestguidelines.github.io/TriageGuidelines/docs/chapter4/</link><description>Recent content in 4章 トリアージ後の対応 on 脆弱性トリアージガイドライン作成の手引き</description><generator>Hugo</generator><language>ja</language><atom:link href="https://webapppentestguidelines.github.io/TriageGuidelines/docs/chapter4/index.xml" rel="self" type="application/rss+xml"/><item><title>修正コストについて</title><link>https://webapppentestguidelines.github.io/TriageGuidelines/docs/chapter4/section1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webapppentestguidelines.github.io/TriageGuidelines/docs/chapter4/section1/</guid><description>&lt;h1 id="修正コストについて">
 修正コストについて
 &lt;a class="anchor" href="#%e4%bf%ae%e6%ad%a3%e3%82%b3%e3%82%b9%e3%83%88%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6">#&lt;/a>
&lt;/h1>
&lt;p>実際にトリアージした脆弱性を対策しようとする際に、脆弱性を修正する際のコストがどの程度であるかを把握する必要があるでしょう。&lt;br>
脆弱性を対策するためにはどのような作業が必要となるかや発生する影響などを確認しましょう。&lt;/p>
&lt;ul>
&lt;li>部分的なソースコードの修正のみ&lt;/li>
&lt;li>一部の設定変更で対応可能&lt;/li>
&lt;li>バージョンアップやパッチ適用が必要&lt;/li>
&lt;li>大規模な設計見直しが必要&lt;/li>
&lt;li>サービスの停止を伴う&lt;/li>
&lt;/ul>
&lt;p>なお、諸事情によって脆弱性の根本対策が難しい場合があります。&lt;br>
例えば、ライブラリの依存関係が動作に影響を及ぼす場合には、バージョンアップでの対策が難しい場合が考えられます。&lt;br>
上記のように脆弱性の根本対策が困難である場合には、後述する例外的対策の実施を検討しましょう。&lt;/p>
&lt;p>また、修正コストを算出する場合には以下のような観点も考慮する必要があります。&lt;/p>
&lt;ul>
&lt;li>社内リソースで対応可能か、外注費用が必要となるか&lt;/li>
&lt;li>修正後のテストにて発生するコストについて&lt;/li>
&lt;/ul>
&lt;p>もし、修正コストが膨大にかかりそうなことが判明した場合には、対策をどのように進めるべきかについて別途検討する必要があるでしょう。&lt;br>
致命的な脆弱性の場合には、修正コストがかかったとしても対応を実施しなければならない場合もあります。&lt;br>
その際には、対象の脆弱性の影響が事業にどの程度影響を及ぼすか判断する必要があります。&lt;br>
システム的な影響以外にも、企業のブランドイメージや評判への影響なども考慮すべきでしょう。&lt;/p>
&lt;ul>
&lt;li>監督官庁・業界団体のガイドラインへの違反による影響&lt;/li>
&lt;li>評判、ブランド、イメージの悪化による影響
&lt;ul>
&lt;li>重要な取引先の損失&lt;/li>
&lt;li>ブランドの失墜&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>脆弱性の修正コストが、経済的な損失を大きく上回る場合は、脆弱性を修正しないビジネス上の決断を行う場合もあります。&lt;br>
リスクの受容や回避など重要なリスクの対応方針の決定は、経営層が判断する必要があります。&lt;/p>
&lt;ul>
&lt;li>修正コストや経済的な影響の判断例
&lt;ul>
&lt;li>脆弱性の修正コストが過大な場合、保険的な対策を行い経済的な損失を抑えリスクの一部を低減する&lt;/li>
&lt;li>経済的な損失が小さく、脆弱性の修正コストが経済的な損失を上回る場合リスクを許容する&lt;/li>
&lt;li>脆弱性がある機能やシステムのみ停止しリスクを回避する&lt;/li>
&lt;li>影響は大きいが発生確率が低い場合、保険に入りリスクを移転する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>例外対応の想定</title><link>https://webapppentestguidelines.github.io/TriageGuidelines/docs/chapter4/section2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://webapppentestguidelines.github.io/TriageGuidelines/docs/chapter4/section2/</guid><description>&lt;h1 id="例外対応の想定">
 例外対応の想定
 &lt;a class="anchor" href="#%e4%be%8b%e5%a4%96%e5%af%be%e5%bf%9c%e3%81%ae%e6%83%b3%e5%ae%9a">#&lt;/a>
&lt;/h1>
&lt;p>実際の現場では修正コストの観点以外にも、様々な理由で、基本方針通りの対応が難しいケースに遭遇すると思います。&lt;/p>
&lt;ul>
&lt;li>例外対応の条件
&lt;ul>
&lt;li>長時間のシステム停止が発生する場合(運用上サービスの停止を許容できないなど)&lt;/li>
&lt;li>修正に長期間の対応が必要となる場合（修正対応をした場合に本来予定しているリリースに間に合わなくなるなど）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>そのため、根本的な修正が難しい場合には、例外的な対応を行うことになるでしょう。&lt;br>
その際、どのような対応を行うことができるか、事前にある程度具体的な選択肢を用意しておくことが大切です。&lt;br>
ここでは想定しておくべき選択肢の例をいくつか記載します。&lt;/p>
&lt;ul>
&lt;li>期限
&lt;ul>
&lt;li>例外対応の実施期限の設定（根本的対策を実施する目途を決めておく）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>緩和策の選択肢
&lt;ul>
&lt;li>公開されている緩和策の実施（根本対策ではない暫定的な対応策）&lt;/li>
&lt;li>アクセス制限の実施&lt;/li>
&lt;li>セキュリティ製品などの利用（IPS・WAFなどで防御を行う）&lt;/li>
&lt;li>提供機能やサービスの縮退&lt;/li>
&lt;li>攻撃に備えて監視面を強化する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>内部的な対応フロー
&lt;ul>
&lt;li>例外対応が発生した際の意思決定者は誰になるのか、その際どのようなフローで対応の内容を決定するのか事前に決めておくようにする。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>なお、あまりにも例外的な対応が多くなりすぎてしまう場合には、そもそもの基本方針の取り決めについても見直すべきです。&lt;/p></description></item></channel></rss>